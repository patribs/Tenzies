import './App.css';
import React from 'react';
import Dice from './components/Dice';
import { useState, useEffect } from 'react';
import { nanoid } from 'nanoid';
import ReactConfetti from 'react-confetti';
//import Confetti from 'react-confetti/dist/types/Confetti';


function App() {
  const [dice, setDice]= useState(allNewDice())
  const [tenzies, setTenzies]= useState(false)

  useEffect(()=>{
    const allHeld= dice.every(die=>die.isHeld)
    const firstValue= dice[0].value 
    const allSameValue= dice.every(die=> die.value=== firstValue)
    if (allHeld && allSameValue){
      setTenzies(true)
      console.log("You won!")
    }
  }, [dice])

 function generateNewDie(){
  return {
    value: Math.ceil(Math.random() * 6),
    isHeld: false,
    id: nanoid()
}
   
 }

  function allNewDice() {
    const newDice = []
    for (let i = 0; i < 10; i++) {
       newDice.push(generateNewDie())
      
    }
    return newDice
   
}

function rollDice() {
  if(!tenzies){
  setDice(oldDice=>oldDice.map(die=>{
    return die.isHeld ?
    die : 
    generateNewDie()


  }))
}else{
  setTenzies(false)
  setDice(allNewDice())
}
}

function holdDice(id){
  setDice(oldDice => oldDice.map(die=> {
    return die.id===id ? 
{...die, isHeld:!die.isHeld} :
die

  }
    
  ))
}

const diceElements= dice.map(die=>(
<Dice key={die.id} value={die.value} isHeld={die.isHeld} id={die.id} holdDice={()=>holdDice(die.id)}/>
))

  return (
    <main>
      {tenzies && <ReactConfetti/>}
       <h1 className="title">Tenzies</h1>
            <p className="instructions">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>
      <div className="dice-container">
 {diceElements}
  </div>
    <button className='btn'
    onClick={rollDice}
    >
      {tenzies ? "New Game" : "Roll"}</button>
   </main>
  );
}

export default App;
